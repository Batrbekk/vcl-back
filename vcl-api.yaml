openapi: 3.0.0
info:
  title: VCL API
  description: API для системы аутентификации VCL
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Локальный сервер разработки
paths:
  /api/auth/register:
    post:
      summary: Регистрация нового пользователя
      description: Регистрация нового пользователя. После регистрации на email придет код подтверждения.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - firstName
                - lastName
                - companyName
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                firstName:
                  type: string
                  example: Иван
                lastName:
                  type: string
                  example: Иванов
                companyName:
                  type: string
                  example: ООО Ромашка
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '201':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Регистрация успешна. Проверьте email для подтверждения.
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пользователь с таким email уже существует
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при регистрации

  /api/auth/verify-email:
    post:
      summary: Подтверждение email или кода сброса пароля
      description: Подтверждение email при регистрации или кода для сброса пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - code
                - mode
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                code:
                  type: string
                  example: "123456"
                mode:
                  type: string
                  enum: [register, reset]
                  example: register
      responses:
        '200':
          description: Код успешно подтвержден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email успешно подтвержден
        '400':
          description: Неверный код или режим
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Неверный код
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при подтверждении

  /api/auth/login:
    post:
      summary: Вход в систему
      description: Вход в систему. Возвращает JWT токен для авторизации.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Неверный email или пароль
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при входе

  /api/auth/send-code:
    post:
      summary: Отправка кода подтверждения или сброса пароля
      description: Отправка кода на email пользователя для подтверждения регистрации или сброса пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - mode
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                mode:
                  type: string
                  enum: [register, reset]
                  example: register
      responses:
        '200':
          description: Код отправлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Код отправлен на email
        '400':
          description: Неверный режим или email уже подтвержден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Неверный режим отправки кода
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пользователь не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при отправке кода

  /api/auth/reset-password:
    post:
      summary: Сброс пароля
      description: Сброс пароля после подтверждения кода
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - newPassword
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                newPassword:
                  type: string
                  format: password
                  example: newpassword123
      responses:
        '200':
          description: Пароль успешно изменен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пароль успешно изменен
        '400':
          description: Необходимо подтвердить код сброса пароля
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Сначала подтвердите код сброса пароля
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пользователь не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при сбросе пароля

  /api/auth/me:
    get:
      summary: Получение данных пользователя
      description: Получение данных текущего авторизованного пользователя.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: 507f1f77bcf86cd799439011
                  email:
                    type: string
                    format: email
                    example: user@example.com
                  firstName:
                    type: string
                    example: Иван
                  lastName:
                    type: string
                    example: Иванов
                  companyName:
                    type: string
                    example: ООО Ромашка
                  isVerified:
                    type: boolean
                    example: true
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-01-01T00:00:00.000Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-01-01T00:00:00.000Z"
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Требуется авторизация
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пользователь не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при получении данных пользователя

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 