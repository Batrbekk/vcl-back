openapi: 3.0.0
info:
  title: VCL API
  description: API для системы аутентификации VCL
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Локальный сервер разработки
paths:
  /api/auth/register:
    post:
      summary: Регистрация нового пользователя
      description: Регистрация нового пользователя. После регистрации на email придет код подтверждения.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - firstName
                - lastName
                - companyName
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                firstName:
                  type: string
                  example: Иван
                lastName:
                  type: string
                  example: Иванов
                companyName:
                  type: string
                  example: ООО Ромашка
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '201':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Регистрация успешна. Проверьте email для подтверждения.
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пользователь с таким email уже существует
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при регистрации

  /api/auth/verify-email:
    post:
      summary: Подтверждение email или кода сброса пароля
      description: Подтверждение email при регистрации или кода для сброса пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - code
                - mode
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                code:
                  type: string
                  example: "123456"
                mode:
                  type: string
                  enum: [register, reset]
                  example: register
      responses:
        '200':
          description: Код успешно подтвержден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email успешно подтвержден
        '400':
          description: Неверный код или режим
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Неверный код
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при подтверждении

  /api/auth/login:
    post:
      summary: Вход в систему
      description: Вход в систему. Возвращает JWT токен для авторизации.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Неверный email или пароль
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при входе

  /api/auth/send-code:
    post:
      summary: Отправка кода подтверждения или сброса пароля
      description: Отправка кода на email пользователя для подтверждения регистрации или сброса пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - mode
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                mode:
                  type: string
                  enum: [register, reset]
                  example: register
      responses:
        '200':
          description: Код отправлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Код отправлен на email
        '400':
          description: Неверный режим или email уже подтвержден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Неверный режим отправки кода
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пользователь не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при отправке кода

  /api/auth/reset-password:
    post:
      summary: Сброс пароля
      description: Сброс пароля после подтверждения кода
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - newPassword
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                newPassword:
                  type: string
                  format: password
                  example: newpassword123
      responses:
        '200':
          description: Пароль успешно изменен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пароль успешно изменен
        '400':
          description: Необходимо подтвердить код сброса пароля
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Сначала подтвердите код сброса пароля
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пользователь не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при сбросе пароля

  /api/auth/me:
    get:
      summary: Получение данных пользователя
      description: Получение данных текущего авторизованного пользователя.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: 507f1f77bcf86cd799439011
                  email:
                    type: string
                    format: email
                    example: user@example.com
                  firstName:
                    type: string
                    example: Иван
                  lastName:
                    type: string
                    example: Иванов
                  companyName:
                    type: string
                    example: ООО Ромашка
                  isVerified:
                    type: boolean
                    example: true
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-01-01T00:00:00.000Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-01-01T00:00:00.000Z"
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Требуется авторизация
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пользователь не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при получении данных пользователя

  /api/agents/llm-prices:
    get:
      summary: Получение доступных LLM моделей и цен
      description: Возвращает список доступных LLM моделей для агентов с ценами за минуту использования
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: agent_id
          schema:
            type: string
          description: ID конкретного агента (необязательно)
      responses:
        '200':
          description: Список LLM моделей и цен получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Информация о доступных LLM моделях получена
                  llm_prices:
                    type: array
                    items:
                      type: object
                      properties:
                        llm:
                          type: string
                          example: gpt-4o-mini
                        price_per_minute:
                          type: number
                          format: float
                          example: 0.0006269457946554367
                  retrieved_at:
                    type: string
                    format: date-time
                    example: '2025-01-15T12:00:00Z'
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Требуется авторизация
        '403':
          description: Нет прав доступа
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Недостаточно прав доступа
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при получении информации о LLM моделях
                  details:
                    type: string
                    example: Не удалось получить информацию о ценах LLM моделей

  /api/agents/knowledge-base:
    get:
      summary: Получение списка базы знаний
      description: Возвращает список документов базы знаний из ElevenLabs
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
          description: Курсор для пагинации
        - in: query
          name: page_size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 30
          description: Количество документов на странице
      responses:
        '200':
          description: Список базы знаний получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Список базы знаний получен
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: POWdTREbVATbWkxwau6A
                        name:
                          type: string
                          example: Mycar.kz - Покупка и продажа автомобилей в Казахстане
                        metadata:
                          type: object
                          properties:
                            created_at_unix_secs:
                              type: number
                              example: 1750195117
                            last_updated_at_unix_secs:
                              type: number
                              example: 1750195117
                            size_bytes:
                              type: number
                              example: 3051
                        supported_usages:
                          type: array
                          items:
                            type: string
                          example: ['prompt', 'auto']
                        access_info:
                          type: object
                          properties:
                            is_creator:
                              type: boolean
                              example: true
                            creator_name:
                              type: string
                              example: Batyrbek Kuandyk
                            creator_email:
                              type: string
                              example: batrbekk@gmail.com
                            role:
                              type: string
                              example: admin
                        dependent_agents:
                          type: array
                          items:
                            type: string
                          example: []
                        type:
                          type: string
                          example: url
                        url:
                          type: string
                          example: https://mycar.kz
                  next_cursor:
                    type: string
                    nullable: true
                    example: null
                  has_more:
                    type: boolean
                    example: false
                  retrieved_at:
                    type: string
                    format: date-time
                    example: '2025-01-15T12:00:00Z'
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Требуется авторизация
        '403':
          description: Нет прав доступа
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Недостаточно прав доступа
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при получении списка базы знаний
                  details:
                    type: string
                    example: Не удалось получить список базы знаний

  /api/agents/{id}:
    patch:
      summary: Обновление агента
      description: Обновляет данные агента в ElevenLabs и синхронизирует с MongoDB
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID агента в ElevenLabs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Guzel
                conversation_config:
                  type: object
                  description: Конфигурация разговора агента
                platform_settings:
                  type: object
                  description: Настройки платформы
                tags:
                  type: array
                  items:
                    type: string
                  example: ['sales', 'support']
      responses:
        '200':
          description: Агент успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Агент успешно обновлен
                  agent_id:
                    type: string
                    example: yufIbo0uUuoT5yZv5vds
                  name:
                    type: string
                    example: Guzel
                  conversation_config:
                    type: object
                    description: Обновленная конфигурация агента
                  synced:
                    type: boolean
                    example: true
                  synced_at:
                    type: string
                    format: date-time
                    example: '2025-01-15T12:00:00Z'
                  updated_at:
                    type: string
                    format: date-time
                    example: '2025-01-15T12:00:00Z'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Неверные данные запроса
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Требуется авторизация
        '403':
          description: Нет прав доступа
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Недостаточно прав доступа
        '404':
          description: Агент не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Агент не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ошибка при обновлении агента
                  details:
                    type: string
                    example: Не удалось обновить агента

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 